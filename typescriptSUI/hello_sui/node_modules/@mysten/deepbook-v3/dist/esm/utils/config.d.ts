import { BalanceManagerContract } from '../transactions/balanceManager.js';
import type { BalanceManager, Environment } from '../types/index.js';
import type { CoinMap, PoolMap } from './constants.js';
export declare const FLOAT_SCALAR = 1000000000;
export declare const POOL_CREATION_FEE: number;
export declare const MAX_TIMESTAMP = 1844674407370955161n;
export declare const GAS_BUDGET: number;
export declare const DEEP_SCALAR = 1000000;
export declare class DeepBookConfig {
    #private;
    balanceManagers: {
        [key: string]: BalanceManager;
    };
    address: string;
    DEEPBOOK_PACKAGE_ID: string;
    REGISTRY_ID: string;
    DEEP_TREASURY_ID: string;
    adminCap?: string;
    balanceManager: BalanceManagerContract;
    constructor({ env, address, adminCap, balanceManagers, coins, pools, }: {
        env: Environment;
        address: string;
        adminCap?: string;
        balanceManagers?: {
            [key: string]: BalanceManager;
        };
        coins?: CoinMap;
        pools?: PoolMap;
    });
    getCoin(key: string): import("../types/index.js").Coin;
    getPool(key: string): import("../types/index.js").Pool;
    /**
     * @description Get the balance manager by key
     * @param managerKey Key of the balance manager
     * @returns The BalanceManager object
     */
    getBalanceManager(managerKey: string): BalanceManager;
}
